{"version":3,"sources":["util/timeout.ts","services/PhotoService.ts","values/Human.tsx","services/HumanService.ts","components/atoms/UserBubble.tsx","components/compounds/AppHeader.tsx","components/compounds/HeroImage.tsx","components/templates/PhotoTemplate.tsx","components/compounds/Activity.tsx","components/compounds/UserTile.tsx","components/compounds/ProfileBody.tsx","components/pages/ProfilePage.tsx","components/Society.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["timeout","ms","Promise","resolve","setTimeout","PhotoService","Object","classCallCheck","this","apiBase","createClass","key","value","_findPhoto","asyncToGenerator","regenerator_default","a","mark","_callee","_len","keywords","_key","uri","response","fetchedUrl","_args","arguments","wrap","_context","prev","next","length","Array","concat","join","axios","get","sent","request","responseURL","console","log","photoUrl","warn","timeoutWarning","abrupt","stop","apply","svc","pick","elems","Math","floor","random","LifeEvent","name","description","icon","id","count","Human","gender","about","quote","job","friends","activities","favoriteColor","colors","from","genEvent","faker","hacker","phrase","jobTitle","push","photoService","findPhoto","other","shouldReflect","undefined","addFriend","asyncForEach","_callee3","array","callback","index","_context3","HumanDatabase","humans","human","localStorage","setItem","JSON","stringify","humansJson","getItem","parse","HumanService","_this","db","all","values","lookup","find","_seed","_callee2","progress","pool","tom","albert","dale","abel","kara","essence","velocity","time","life","sweet","x","n","_this2","_context2","thaw","_ref","p","put","findGoodPicture","entries","_x4","freeze","_x3","UserBubble","react_default","createElement","className","style","background","Masquerade","props","Dropdown","button","size","floating","labeled","text","userName","onChange","_ref2","_e","onChangeUser","onVisitHome","_x","_x2","search","header","width","options","map","image","avatar","src","AppHeader","_ref3","userPhotoUrl","Menu","Item","AppHeader_Masquerade","position","onClick","e","cursor","UserBubble_UserBubble","HeroImage","Segment","backgroundSize","children","React","Component","PhotoTemplate","aside","hero","heroContent","doTemplateContent","Fragment","backgroundColor","Header","Icon","color","Subheader","components_compounds_AppHeader","Responsive","minWidth","SegmentGroup","HeroImage_HeroImage","heroPhotoUrl","Activity","activity","Container","fluid","UserTile","lookupHuman","changeHuman","h","compact","ProfileBody","compounds_UserTile","maxWidth","components_compounds_Activity","ProfilePage","_this$props","user","me","components_templates_PhotoTemplate","changeUser","people","raised","fontSize","display","flexDirection","justifyContent","alignItems","components_compounds_ProfileBody","Society","state","constructed","updateHuman","setState","updateUser","visitHome","seed","_this$state","template","ProfilePage_ProfilePage","App","Society_Society","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3093020c.chunk.js","sourcesContent":["export default function timeout(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}","import axios from 'axios';\r\nimport timeout from '../util/timeout';\r\n\r\nexport class PhotoService {\r\n    static timeoutWarning =\r\n        \"We are enforcing a 3s timeout after calls to findPhoto.\"\r\n    apiBase: string = 'https://source.unsplash.com';\r\n    async findPhoto(...keywords: string[]): Promise<string> {\r\n        let sz = '1080x720';\r\n        let uri = `${this.apiBase}/random/${sz}/?${keywords.join('+')}`;\r\n        let response = await axios.get(uri)\r\n        let fetchedUrl = response.request.responseURL\r\n        console.log(\"Found a good photo\", { photoUrl: fetchedUrl })\r\n        console.warn(PhotoService.timeoutWarning)\r\n        await timeout(3000)\r\n        return fetchedUrl\r\n    }\r\n}\r\n\r\nlet svc = new PhotoService()\r\nexport default svc;","import { SemanticCOLORS } from \"semantic-ui-react\";\r\nimport faker from 'faker';\r\nimport photoService from '../services/PhotoService';\r\nimport { SemanticICONS } from \"semantic-ui-react/dist/commonjs/generic\";\r\n\r\nfunction pick<T>(...elems: T[]) {\r\n    let idx = Math.floor(Math.random()*elems.length);\r\n    return elems[idx];\r\n}\r\n\r\nexport interface Event {\r\n    id: number\r\n    icon: SemanticICONS\r\n    name: string\r\n    description: string\r\n}\r\n\r\nclass LifeEvent implements Event {\r\n    id: number;\r\n    static count:number = 0;\r\n    constructor(public name: string, public description: string, public icon: SemanticICONS) {\r\n        this.id = LifeEvent.count++\r\n        console.log(\"EVT\", this.id, this.name, this.description)\r\n    }\r\n}\r\n\r\nexport default class Human {\r\n    static count: number = 0;\r\n    public photoUrl?: string;\r\n    public quote?: string;\r\n    public job?: string;\r\n    public friends: number[] = []\r\n    public id: number;\r\n    public activities: Event[] = []\r\n    public favoriteColor: \"red\" | \"orange\" | \"yellow\" | \"olive\" | \"green\" | \"teal\" | \"blue\" | \"violet\" | \"purple\" | \"pink\" | \"brown\" | \"grey\" | \"black\" | undefined;\r\n\r\n    constructor(public name: string, public gender: 'male' | 'female', public about: string) {\r\n        this.id = Human.count++;\r\n        let colors: SemanticCOLORS[] = [ \"red\", \"orange\", \"green\", \"yellow\", \"olive\", \"teal\", \"violet\", \"pink\", \"blue\" ];\r\n        this.favoriteColor = colors[Math.floor(Math.random()*colors.length)]\r\n        this.activities = Array.from({length:10}, this.genEvent)\r\n        this.quote = faker.hacker.phrase();\r\n        this.job = faker.name.jobTitle()\r\n    }\r\n    genEvent(): LifeEvent {\r\n        let name = 'something happened'\r\n        let description = 'it was okay'\r\n\r\n        let icon: SemanticICONS = pick('food', 'favorite', 'music')\r\n        if (icon === 'food') {\r\n            name = 'i ate ' + pick('breakfast', 'lunch', 'dinner', 'a snack')\r\n            description = 'it was really good actually'\r\n        } else if (icon === 'music') {\r\n            name = pick('played some tunes', 'jammed out')\r\n            description = pick(\"i should learn to play\", \"alright it sounded pretty good\")\r\n        } else { // fav\r\n            console.log('---> event', { icon })\r\n            name = 'something great happened'\r\n            description = \"i can't actually describe it all too well, but you know\"\r\n        }\r\n        return new LifeEvent(name, description, icon)\r\n    }\r\n    async findGoodPicture() {\r\n        let keywords = [ 'face', 'person' ]\r\n        if (Math.random() < 0.2) {\r\n            if (this.gender === 'male') {\r\n                keywords.push('man')\r\n            } else {\r\n                keywords.push('woman')\r\n            }\r\n        } else {\r\n            keywords.push(this.gender)\r\n        }\r\n        this.photoUrl = await photoService.findPhoto(...keywords)\r\n    }\r\n\r\n    addFriend(other: Human, shouldReflect: boolean = true) {\r\n        this.friends.push(other.id)\r\n        if (shouldReflect) {\r\n            other.addFriend(this, false)\r\n        }\r\n    }\r\n}","import Human from \"../values/Human\";\r\nimport { SemanticICONS } from \"semantic-ui-react\";\r\nasync function asyncForEach<T>(array: Array<T>, callback: (t: T, n: number, arr: Array<T>) => void) {\r\n    for (let index = 0; index < array.length; index++) {\r\n        await callback(array[index], index, array);\r\n    }\r\n}\r\n\r\nclass HumanDatabase {\r\n    humans: { [id: string]: Human } = {}\r\n    find(id: number) {\r\n        return this.humans[id];\r\n    }\r\n    put(id: number, human: Human) {\r\n        this.humans[id] = human;\r\n    }\r\n    freeze() {\r\n        console.log(\"FREEZE\")\r\n        localStorage.setItem('humans', JSON.stringify(this.humans))\r\n    }\r\n    thaw(): boolean {\r\n        console.log(\"THAW\")\r\n        let humansJson: string | null = localStorage.getItem('humans')\r\n        if (humansJson) {\r\n            this.humans = JSON.parse(humansJson)\r\n            console.log(\"THAWED ---> \", { humans: this.humans })\r\n            return true\r\n        }\r\n        return false\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport class HumanService {\r\n    db: HumanDatabase = new HumanDatabase()\r\n    constructor() {\r\n        console.log(\"Created new humans service!\")\r\n    }\r\n    all = () => Object.values(this.db.humans)\r\n    lookup = (id: number) => this.db.find(id)\r\n\r\n    async seed(progress: (n: number) => void): Promise<void> {\r\n        if (this.db.thaw()) {\r\n            console.warn(\"THAWED, skipping seed\")\r\n            return\r\n        }\r\n        console.log(\"SEEDING\")\r\n        let pool = {\r\n            dale: new Human(\"Dale Lingis\", 'male', \"making it work\"),\r\n            tom: new Human(\"Tom Jones\", 'male', \"something is gonna happen\"),\r\n            albert: new Human(\"Albert Transfer\", 'male', \"it's all going to work out\"),\r\n            abel: new Human(\"Abel Don\", 'male', \"everything is cool\"),\r\n            kara: new Human(\"Kara Teristic\", 'female', \"the world is okay\"),\r\n            //new Human(\"Ma Bell\"),\r\n            essence: new Human(\"Essence Beauty\", 'female', \"i like talking to people\"),\r\n            velocity: new Human(\"Velocity Ideas\", 'female', \"shopping is fun\"),\r\n            time: new Human(\"Time Shine\", 'female', \"having a good time\"),\r\n            life: new Human(\"Life Cosmos\", 'female', \"i enjoy chilling out with my friends\"),\r\n            sweet: new Human(\"Sweet Good Omens\", 'female', \"it's all a game really\"),\r\n            x: new Human(\"Mr. X\", 'male', \"i'll keep my personal details to myself, thanks\"),\r\n\r\n        }\r\n        let { tom, albert, dale, abel, kara, essence, velocity, time, life, sweet, x } = pool;\r\n        tom.addFriend(albert)\r\n        tom.addFriend(dale)\r\n        tom.addFriend(sweet)\r\n        sweet.addFriend(x)\r\n        dale.addFriend(abel)\r\n        abel.addFriend(kara)\r\n        kara.addFriend(albert)\r\n        kara.addFriend(essence)\r\n        kara.addFriend(velocity)\r\n        kara.addFriend(time)\r\n        time.addFriend(life)\r\n        time.addFriend(velocity)\r\n        time.addFriend(essence)\r\n        time.addFriend(abel)\r\n\r\n\r\n        let n = 0;\r\n        await asyncForEach(Object.values(pool), async (human: Human) => {\r\n            this.db.put(human.id, human)\r\n            await human.findGoodPicture()\r\n            n++\r\n            let p = Math.floor(100 * ((n) / Object.entries(pool).length))\r\n            console.log(\"PROGRESS\", p)\r\n            progress(p)\r\n        })\r\n        this.db.freeze()\r\n    }\r\n}\r\n\r\nconst svc = new HumanService();\r\nexport default svc;","import React from 'react';\r\n// import './UserBubble.scss';\r\nexport const UserBubble: React.FC<{ photoUrl: string }> = ({ photoUrl }) => <div\r\n    className='User-Bubble' style={{\r\n        background: `center / 150% url(${photoUrl})`,\r\n    }}\r\n/>\r\n","import React from 'react';\r\nimport { Dropdown, Menu } from \"semantic-ui-react\";\r\nimport './AppHeader.scss';\r\nimport { UserBubble } from '../atoms/UserBubble';\r\nimport HumanService from '../../services/HumanService';\r\nimport Human from '../../values/Human';\r\n\r\ninterface MasqueradeProps { onChangeUser: Function, onVisitHome: Function, userName: string }\r\nconst Masquerade: React.FC<MasqueradeProps> = (props: MasqueradeProps) => <Dropdown\r\n    button\r\n    size='small'\r\n    className='icon'\r\n    floating\r\n    labeled\r\n    icon='user circle'\r\n    text={props.userName}\r\n    onChange={async (_e, { value }) => {\r\n        // @ts-ignore\r\n        let id: number = value\r\n        await props.onChangeUser(HumanService.lookup(id))\r\n        props.onVisitHome()\r\n    }}\r\n    search\r\n    header=\"Let the Masquerade begin!\"\r\n    style={{ width: '258px' }}\r\n    options={HumanService.all().map((human: Human) => {\r\n        return {\r\n            key: human.id,\r\n            text: human.name,\r\n            value: human.id,\r\n            image: { avatar: true, src: human.photoUrl }\r\n        }})}\r\n    />\r\n\r\ninterface Props {\r\n    userName: string\r\n    userPhotoUrl: string\r\n    onChangeUser: Function\r\n    onVisitHome: Function\r\n}\r\nconst AppHeader: React.FC<Props> = ({\r\n    userName,\r\n    userPhotoUrl,\r\n    onVisitHome,\r\n    onChangeUser,\r\n}) => <Menu className='App-header'>\r\n    <Menu.Item name='society' className='App-name'></Menu.Item>\r\n        <Menu.Item>\r\n            <Masquerade\r\n                userName={userName}\r\n                onVisitHome={onVisitHome}\r\n                onChangeUser={onChangeUser}\r\n            />\r\n        </Menu.Item>\r\n        <Menu.Item position='right'>\r\n            <div\r\n                className='App-user'\r\n                onClick={(e) => onVisitHome()}\r\n                style={{\r\n                    cursor: 'pointer'\r\n                }}\r\n            >\r\n                <UserBubble photoUrl={userPhotoUrl} />\r\n                {userName}\r\n            </div>\r\n        </Menu.Item>\r\n    </Menu>\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\ninterface Props { photoUrl: string }\r\nexport default class HeroImage extends React.Component<Props>  {\r\n    render() {\r\n        let { photoUrl } = this.props;\r\n        return <Segment\r\n            className='Profile-header'\r\n            style={{\r\n                background: `center / 100% url(${photoUrl}) fixed`,\r\n                backgroundSize: 'cover'\r\n            }}\r\n        >\r\n            {this.props.children}\r\n        </Segment>;\r\n    }\r\n}","import React, { ReactNode } from \"react\";\r\nimport AppHeader from \"../compounds/AppHeader\";\r\nimport { Responsive, Segment, Header, Icon, SegmentGroup } from \"semantic-ui-react\";\r\nimport './PhotoTemplate.scss';\r\nimport HeroImage from \"../compounds/HeroImage\";\r\nimport faker from 'faker';\r\n\r\ninterface Props {\r\n    heroPhotoUrl: string\r\n    userPhotoUrl: string\r\n    userName?: string\r\n    aside?: ReactNode\r\n    heroContent?: ReactNode\r\n    doTemplateContent?: boolean\r\n    onChangeUser: Function\r\n    onVisitHome: Function\r\n}\r\n\r\nclass PhotoTemplate extends React.Component<Props> {\r\n    render() {\r\n        let aside = this.props.aside\r\n        let hero = this.props.heroContent || this.props.doTemplateContent && <>\r\n            <Segment style={{ backgroundColor: 'rgba(255,255,255,0.8)' }}>\r\n                <Header icon>\r\n                    <Icon name='user' color='grey' />\r\n                    Odysseus\r\n                    <Header.Subheader>this could be you!</Header.Subheader>\r\n                </Header>\r\n            </Segment>\r\n        </>\r\n        let userName = this.props.userName || 'Odysseus'\r\n        return (<div className=\"Page\">\r\n            <AppHeader\r\n                userName={userName}\r\n                userPhotoUrl={this.props.userPhotoUrl}\r\n                onChangeUser={this.props.onChangeUser}\r\n                onVisitHome={this.props.onVisitHome}\r\n            />\r\n            <main className='App-main'>\r\n                <Responsive minWidth={992}>\r\n                    <div className='Page-aside'>\r\n                        {aside}\r\n                    </div>\r\n                </Responsive>\r\n                <div className='Page-main'>\r\n                    <SegmentGroup className='Page-mainGroup'>\r\n                        {/* <Segment> */}\r\n                            <HeroImage photoUrl={this.props.heroPhotoUrl}>\r\n                                {hero}\r\n                            </HeroImage>\r\n                        {/* </Segment> */}\r\n                        {this.props.children || <Segment>Nothing here!</Segment>}\r\n                    </SegmentGroup>\r\n                </div>\r\n            </main>\r\n        </div>)\r\n    }\r\n}\r\nexport default PhotoTemplate;","import React from 'react';\r\nimport { SegmentGroup, Segment, Container, Header, Icon } from \"semantic-ui-react\";\r\nimport { UserBubble } from \"../atoms/UserBubble\";\r\nimport Human, { Event } from \"../../values/Human\";\r\nimport './Activity.scss';\r\n\r\ninterface Props { activity: Event, human: Human }\r\nconst Activity: React.FC<Props> = ({ activity, human }) => <SegmentGroup\r\n    key={activity.id}\r\n    className='Activity'\r\n>\r\n    <Segment color={human.favoriteColor} className='Activity-header'>\r\n        <Container className='Activity-author'>\r\n            {human.photoUrl && <UserBubble photoUrl={human.photoUrl} />}\r\n            <b>{human.name}</b> did something!\r\n        </Container>\r\n        <div className='Activity-actions'>\r\n            <span className='Activity-action'>\r\n                <span>0</span>\r\n                <Icon name='heart' color='red' />\r\n            </span>\r\n            <span className='Activity-action'>\r\n                <span>1</span>\r\n                <Icon name='favorite' color='yellow' />\r\n            </span>\r\n        </div>\r\n    </Segment>\r\n    <Segment style={{ backgroundColor: '#eaeaea' }}>\r\n        <Container fluid style={{ width: '30%' }}>\r\n            <Segment>\r\n                <div className='Activity-body'>\r\n                    <Header icon>\r\n                        <Icon name={activity.icon} />\r\n                        {activity.name}\r\n                    </Header>\r\n                    <Container>\r\n                        {activity.description}\r\n                    </Container>\r\n                </div>\r\n            </Segment>\r\n        </Container>\r\n    </Segment>\r\n</SegmentGroup>\r\n\r\nexport default Activity;","import React from 'react';\r\nimport Human from \"../../values/Human\";\r\nimport { Segment, Header, Icon, SegmentGroup } from \"semantic-ui-react\";\r\nimport { UserBubble } from \"../atoms/UserBubble\";\r\n\r\ninterface Props { human: Human, lookupHuman: Function, changeHuman: Function }\r\nconst UserTile: React.FC<Props> = ({ human, lookupHuman, changeHuman }) => <Segment className='User-Tile' color={human.favoriteColor}>\r\n    {human.photoUrl && <UserBubble photoUrl={human.photoUrl} />}\r\n    {/* <div className='User-Bubble' style={{\r\n                    background: `center / 150% url(${human.photoUrl})`,\r\n                }} /> */}\r\n    <Header size='large'>\r\n        {human.name}\r\n        <Header.Subheader>\r\n            {human.about}\r\n        </Header.Subheader>\r\n    </Header>\r\n    <Header>Quote</Header>\r\n    <i>\"{human.quote}\"</i>\r\n    <Segment className='Friends'>\r\n        <Header size='tiny' icon>\r\n            <Icon name='group' />\r\n            Friends of {human.name}\r\n        </Header>\r\n        <SegmentGroup>\r\n            {human.friends.map((id: number) => {\r\n                let h = lookupHuman(id)\r\n                return <Segment\r\n                    className='Friends--list-item'\r\n                    compact\r\n                    color={h.favoriteColor}\r\n                    key={h.id}\r\n                    onClick={() => changeHuman(h)}\r\n                >\r\n                    <UserBubble photoUrl={h.photoUrl} />\r\n                    {h.name}\r\n                </Segment>\r\n            })}\r\n        </SegmentGroup>\r\n    </Segment>\r\n</Segment>\r\nexport default UserTile;","import React from 'react';\r\nimport { Responsive, Segment, Header, Icon, Container } from \"semantic-ui-react\";\r\nimport Human from \"../../values/Human\";\r\nimport Activity from './Activity';\r\nimport UserTile from './UserTile';\r\nimport './ProfileBody.scss'\r\n\r\ninterface Props {\r\n    human: Human\r\n    lookupHuman: Function\r\n    changeHuman: Function\r\n}\r\n\r\nconst ProfileBody: React.FC<Props> = ({ human, lookupHuman, changeHuman }: Props) => <div className='Profile-main'>\r\n    <div className='Profile-body'>\r\n        <Responsive minWidth={992}>\r\n            <UserTile\r\n                human={human}\r\n                lookupHuman={lookupHuman}\r\n                changeHuman={changeHuman}\r\n            />\r\n        </Responsive>\r\n        <Segment className='Feed'>\r\n            <Responsive maxWidth={991}>\r\n                <UserTile\r\n                    human={human}\r\n                    lookupHuman={lookupHuman}\r\n                    changeHuman={changeHuman}\r\n                />\r\n            </Responsive>\r\n            <Header>{human.name}'s Recent Activity</Header>\r\n            <Container>\r\n                {human.activities.map(activity => <Activity activity={activity} human={human} />)}\r\n            </Container>\r\n        </Segment>\r\n    </div>\r\n</div>\r\n\r\nexport default ProfileBody;\r\n","import React from \"react\";\r\nimport Human from \"../../values/Human\";\r\nimport { Header, Icon, Segment, SegmentGroup, Container } from 'semantic-ui-react';\r\nimport './ProfilePage.scss';\r\nimport PhotoTemplate from \"../templates/PhotoTemplate\";\r\nimport ProfileBody from \"../compounds/ProfileBody\";\r\nimport faker from 'faker';\r\nimport { UserBubble } from \"../atoms/UserBubble\";\r\n\r\ninterface Props {\r\n    human: Human\r\n    user: Human\r\n    changeUser: (u: Human) => void\r\n    changeHuman: (h: Human) => void\r\n    lookupHuman: (id: number) => Human\r\n    onVisitHome: Function\r\n}\r\n\r\nexport default class ProfilePage extends React.Component<Props> {\r\n    render() {\r\n        let { human, user, changeHuman, lookupHuman } = this.props;\r\n        let me = user === human;\r\n        return <PhotoTemplate\r\n            onChangeUser={this.props.changeUser}\r\n            onVisitHome={this.props.onVisitHome}\r\n            userName={user.name}\r\n\r\n            userPhotoUrl={user.photoUrl || faker.image.people()}\r\n            heroPhotoUrl={human.photoUrl || faker.image.people()}\r\n            heroContent={\r\n                <SegmentGroup raised className='UserOverlay'>\r\n                    <Segment>\r\n                        <Header>\r\n                            {human.photoUrl && <UserBubble photoUrl={human.photoUrl} />}\r\n                            {human.name}\r\n                            {me && <Header.Subheader>this is you!</Header.Subheader>}\r\n                        </Header>\r\n                    </Segment>\r\n                    <Segment>{human.about}</Segment>\r\n                    <Segment>\r\n                        <div style={{\r\n                            fontSize: '62.5%',\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n\r\n                        }}>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='user' size='tiny' color='green' />\r\n                                    {human.friends.length} Friends\r\n                            </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='group' size='tiny' color='violet' />\r\n                                    {human.friends.length} Groups\r\n                            </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='heart' size='tiny' color='red' />\r\n                                    {human.friends.length} Hearts\r\n                                </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='star' size='tiny' color='yellow' />\r\n                                    {human.friends.length} Stars\r\n                                </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='plus' size='tiny' color='blue' />\r\n                                    {human.friends.length} Votes\r\n                                </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='mail forward' size='tiny' color='olive' />\r\n                                    {human.friends.length} Links\r\n                                </Header>\r\n                            </div>\r\n                        </div>\r\n                    </Segment>\r\n                </SegmentGroup>\r\n            }\r\n        >\r\n            <ProfileBody\r\n                human={human}\r\n                changeHuman={changeHuman}\r\n                lookupHuman={lookupHuman}\r\n            />\r\n\r\n        </PhotoTemplate>\r\n    }\r\n}","import Human from \"../values/Human\";\r\nimport React from \"react\";\r\nimport HumanService from \"../services/HumanService\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport PhotoTemplate from \"./templates/PhotoTemplate\";\r\nimport faker from 'faker';\r\n\r\nimport './Society.scss';\r\n\r\ninterface Props {\r\n  template?: boolean\r\n}\r\n\r\ninterface State {\r\n  constructed: boolean\r\n  progress: number\r\n  user?: Human\r\n  human?: Human\r\n}\r\n\r\nexport default class Society extends React.Component<Props, State> {\r\n  state: State = {\r\n    constructed: false,\r\n    progress: 0,\r\n    user: undefined,\r\n    human: undefined,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"Mounted society...\")\r\n    await HumanService.seed((progress: number) => {\r\n      this.setState({ progress })\r\n    })\r\n    console.log(\"Done with seed!\")\r\n    this.setState({\r\n      user: HumanService.lookup(1),\r\n      constructed: true,\r\n      human: HumanService.lookup(1),\r\n    })\r\n  }\r\n\r\n  updateHuman = async (human: Human) => {\r\n    console.log(\"UPDATE HUMAN\", { human, name: human.name })\r\n    await this.setState({ human })\r\n    console.log(\"DONE UPDATE HUMAN\")\r\n  }\r\n  updateUser = async (user: Human) => {\r\n    console.log(\"UPDATE USER\", { user, name: user.name })\r\n    await this.setState({ user })\r\n    console.log(\"DONE UPDATE USER\")\r\n  }\r\n  visitHome = () => {\r\n    let { user } = this.state\r\n    if (user) {\r\n      console.log(\"VISIT HOME\", { user, name: user.name })\r\n      this.updateHuman(user)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { constructed, human, user } = this.state;\r\n    if (constructed && human !== undefined && user !== undefined) {\r\n      return this.props.template ? <PhotoTemplate\r\n        onChangeUser={this.updateUser}\r\n        onVisitHome={() => {}}\r\n        userPhotoUrl={faker.image.people()}\r\n        heroPhotoUrl={faker.image.people()} doTemplateContent\r\n      /> : <ProfilePage\r\n        human={human}\r\n        user={user}\r\n        onVisitHome={this.visitHome}\r\n        changeHuman={this.updateHuman}\r\n        changeUser={this.updateUser}\r\n        lookupHuman={HumanService.lookup}\r\n      />\r\n    } else {\r\n      return <div className='Construction'>\r\n        <Container>\r\n          <Segment>\r\n            <Header>Constructing the World...</Header>\r\n            Please wait just a moment, building some interesting people ({this.state.progress}%)...\r\n            (Please note: we'll only do this once!)\r\n          </Segment>\r\n        </Container>\r\n      </div>\r\n    }\r\n  }\r\n}","import React from 'react';\nimport Society from './components/Society';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Society />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}