{"version":3,"sources":["util/timeout.ts","services/PhotoService.ts","values/Human.tsx","services/HumanService.ts","components/atoms/UserBubble.tsx","components/atoms/Masquerade.tsx","components/compounds/AppHeader.tsx","components/compounds/HeroImage.tsx","components/templates/PhotoTemplate.tsx","components/compounds/Activity.tsx","components/compounds/UserTile.tsx","components/compounds/ProfileBody.tsx","components/pages/ProfilePage.tsx","components/pages/ActivityFeedPage.tsx","components/Society.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["timeout","ms","Promise","resolve","setTimeout","PhotoService","Object","classCallCheck","this","apiBase","createClass","key","value","_findPhoto","asyncToGenerator","regenerator_default","a","mark","_callee","_len","keywords","_key","uri","response","fetchedUrl","_args","arguments","wrap","_context","prev","next","length","Array","concat","join","axios","get","sent","request","responseURL","console","log","photoUrl","warn","timeoutWarning","abrupt","stop","apply","svc","pick","elems","Math","floor","random","LifeEvent","creatorId","name","description","icon","id","createdAt","count","Date","Human","gender","about","_this","quote","job","friends","activities","favoriteColor","genEvent","push","colors","faker","hacker","phrase","jobTitle","photoService","findPhoto","other","shouldReflect","undefined","addFriend","asyncForEach","_callee3","array","callback","index","_context3","HumanDatabase","humans","human","localStorage","setItem","JSON","stringify","humansJson","getItem","parse","k","v","HumanService","db","all","values","lookup","find","_seed","_callee2","progress","pool","tom","albert","dale","abel","kara","essence","velocity","time","life","sweet","x","n","i","_this2","_context2","thaw","_ref","p","put","findGoodPicture","entries","_x4","forEach","freeze","_x3","UserBubble","react_default","createElement","className","style","background","Masquerade","props","Dropdown","button","size","floating","labeled","text","userName","onChange","_ref2","_e","onChangeUser","onVisitHome","_x","_x2","search","header","width","color","options","map","image","avatar","src","AppHeader","userPhotoUrl","onVisitProfile","Menu","Item","link","onClick","e","atoms_Masquerade","position","cursor","UserBubble_UserBubble","HeroImage","Segment","backgroundSize","children","React","Component","PhotoTemplate","aside","hero","heroContent","doTemplateContent","Fragment","backgroundColor","Header","Icon","Subheader","components_compounds_AppHeader","Responsive","minWidth","SegmentGroup","HeroImage_HeroImage","heroPhotoUrl","Activity","activity","humanId","Container","marginLeft","toLocaleTimeString","fluid","UserTile","lookupHuman","changeHuman","h","compact","ProfileBody","state","input","handleInputChange","setState","target","_this$props","me","createActivity","slice","sort","b","as","components_compounds_UserTile","Input","placeholder","Button","primary","type","Divider","maxWidth","components_compounds_Activity","ProfilePage","user","components_templates_PhotoTemplate","changeUser","people","raised","fontSize","display","flexDirection","justifyContent","alignItems","components_compounds_ProfileBody","desc","ActivityFeedPage","items","filter","includes","flatMap","it","Society","constructed","page","updateHuman","updateUser","visitProfile","visitHome","renderPage","ActivityFeedPage_ActivityFeedPage","template","renderProfileTemplate","ProfilePage_ProfilePage","seed","_this$state","Progress","total","App","Society_Society","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2cde1c17.chunk.js","sourcesContent":["export default function timeout(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}","import axios from 'axios';\r\nimport timeout from '../util/timeout';\r\n\r\nexport class PhotoService {\r\n    static timeoutWarning =\r\n        \"We are enforcing a 3s timeout after calls to findPhoto.\"\r\n    apiBase: string = 'https://source.unsplash.com';\r\n    async findPhoto(...keywords: string[]): Promise<string> {\r\n        let sz = '1080x720';\r\n        let uri = `${this.apiBase}/random/${sz}/?${keywords.join('+')}`;\r\n        let response = await axios.get(uri)\r\n        let fetchedUrl = response.request.responseURL\r\n        console.log(\"Found a good photo\", { photoUrl: fetchedUrl })\r\n        console.warn(PhotoService.timeoutWarning)\r\n        await timeout(3000)\r\n        return fetchedUrl\r\n    }\r\n}\r\n\r\nlet svc = new PhotoService()\r\nexport default svc;","import { SemanticCOLORS } from \"semantic-ui-react\";\r\nimport faker from 'faker';\r\nimport photoService from '../services/PhotoService';\r\nimport { SemanticICONS } from \"semantic-ui-react/dist/commonjs/generic\";\r\n\r\nfunction pick<T>(...elems: T[]) {\r\n    let idx = Math.floor(Math.random()*elems.length);\r\n    return elems[idx];\r\n}\r\n\r\nexport interface Event {\r\n    creatorId: number;\r\n    id: number\r\n    icon: SemanticICONS\r\n    name: string\r\n    description: string\r\n    keywords: string[]\r\n    createdAt: Date\r\n}\r\n\r\nexport class LifeEvent implements Event {\r\n    public static count:number = 0;\r\n    public id: number;\r\n    public createdAt: Date; // = new Date();\r\n    constructor(public creatorId: number, public name: string, public description: string, public icon: SemanticICONS, public keywords: string[]) {\r\n        this.id = LifeEvent.count++\r\n        this.createdAt = new Date()\r\n        console.log(\"EVT\", this.id, this.name, this.description)\r\n    }\r\n}\r\n\r\nexport default class Human {\r\n    static count: number = 0;\r\n    public photoUrl?: string;\r\n    public quote?: string;\r\n    public job?: string;\r\n    public friends: number[] = []\r\n    public id: number;\r\n    public activities: Event[] = []\r\n    public favoriteColor: \"red\" | \"orange\" | \"yellow\" | \"olive\" | \"green\" | \"teal\" | \"blue\" | \"violet\" | \"purple\" | \"pink\" | \"brown\" | \"grey\" | \"black\" | undefined;\r\n\r\n    constructor(public name: string, public gender: 'male' | 'female', public about: string) {\r\n        this.id = Human.count++;\r\n        let colors: SemanticCOLORS[] = [ \"red\", \"orange\", \"green\", \"yellow\", \"olive\", \"teal\", \"violet\", \"pink\", \"blue\" ];\r\n        this.favoriteColor = colors[Math.floor(Math.random()*colors.length)]\r\n        this.activities = [] //Array.from({length:25}, this.genEvent)\r\n        this.quote = faker.hacker.phrase();\r\n        this.job = faker.name.jobTitle()\r\n    }\r\n    genEvent = (): LifeEvent => {\r\n        let name = 'something happened'\r\n        let description = 'it was okay'\r\n        let keywords: string[] = [ ]\r\n\r\n        let icon: SemanticICONS = pick('food', 'favorite', 'music', 'map')\r\n        if (icon === 'food') {\r\n            name = 'i ate ' + pick('breakfast', 'lunch', 'dinner', 'a snack')\r\n            description = pick(\r\n                'it was really good actually',\r\n                \"i could've had something else\",\r\n                \"i didn't mind it?\",\r\n                \"could've been more tasty\",\r\n                \"was actually delicious\"\r\n            )\r\n            keywords.push('food')\r\n        } else if (icon === 'music') {\r\n            name = pick('played some tunes', 'jammed out', 'listened to music', 'drove around and rocked out')\r\n            description = pick(\"i should learn to play\", \"alright it sounded pretty good\", \"you know how we do this\")\r\n            keywords.push('music')\r\n        } else if (icon === 'favorite') { // fav\r\n            console.log('---> event', { icon })\r\n            name = pick(\r\n                'Got an award',\r\n                'Made the team',\r\n                'Achieved the goal',\r\n            )\r\n            description = pick(\r\n                \"i'm just glad to be here\",\r\n                \"life is good, you know?\",\r\n                \"it's alright!\",\r\n                \"it feels fantastic\",\r\n                \"i can't actually describe it all too well, but you know\"\r\n            )\r\n            keywords.push('team')\r\n        } else if (icon === 'map') {\r\n            name = \"Arrived at \" + pick('School', 'Work', 'Home', 'Church', 'the Mall')\r\n            description = pick(\"Unremarkable\")\r\n            keywords.push('travel')\r\n        }\r\n        return new LifeEvent(this.id, name, description, icon, keywords)\r\n    }\r\n    async findGoodPicture() {\r\n        let keywords = [ 'face', 'person' ]\r\n        if (Math.random() < 0.2) {\r\n            if (this.gender === 'male') {\r\n                keywords.push('man')\r\n            } else {\r\n                keywords.push('woman')\r\n            }\r\n        } else {\r\n            keywords.push(this.gender)\r\n        }\r\n        this.photoUrl = await photoService.findPhoto(...keywords)\r\n    }\r\n\r\n    addFriend(other: Human, shouldReflect: boolean = true) {\r\n        this.friends.push(other.id)\r\n        if (shouldReflect) {\r\n            other.addFriend(this, false)\r\n        }\r\n    }\r\n}","import Human from \"../values/Human\";\r\nimport { SemanticICONS } from \"semantic-ui-react\";\r\nasync function asyncForEach<T>(array: Array<T>, callback: (t: T, n: number, arr: Array<T>) => void) {\r\n    for (let index = 0; index < array.length; index++) {\r\n        await callback(array[index], index, array);\r\n    }\r\n}\r\n\r\nclass HumanDatabase {\r\n    humans: { [id: string]: Human } = {}\r\n    find(id: number) {\r\n        return this.humans[id];\r\n    }\r\n    put(id: number, human: Human) {\r\n        this.humans[id] = human;\r\n    }\r\n    freeze() {\r\n        console.log(\"FREEZE\")\r\n        localStorage.setItem('humans', JSON.stringify(this.humans))\r\n    }\r\n    thaw(): boolean {\r\n        console.log(\"THAW\")\r\n        let humansJson: string | null = localStorage.getItem('humans')\r\n        if (humansJson) {\r\n            this.humans = JSON.parse(humansJson, (k: string, v: any) => {\r\n                if (k === 'createdAt') {\r\n                    return new Date(v);\r\n                }\r\n                return v;\r\n            })\r\n            console.log(\"THAWED ---> \", { humans: this.humans })\r\n            return true\r\n        }\r\n        return false\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport class HumanService {\r\n    db: HumanDatabase = new HumanDatabase()\r\n    constructor() {\r\n        console.log(\"Created new humans service!\")\r\n    }\r\n    all = () => Object.values(this.db.humans)\r\n    lookup = (id: number) => this.db.find(id)\r\n\r\n    async seed(progress: (n: number) => void): Promise<void> {\r\n        if (this.db.thaw()) {\r\n            console.warn(\"THAWED, skipping seed\")\r\n            return\r\n        }\r\n        console.log(\"SEEDING\")\r\n        let pool = {\r\n            dale: new Human(\"Dale Lingis\", 'male', \"making it work\"),\r\n            tom: new Human(\"Tom Jones\", 'male', \"something is gonna happen\"),\r\n            albert: new Human(\"Albert Transfer\", 'male', \"it's all going to work out\"),\r\n            abel: new Human(\"Abel Don\", 'male', \"everything is cool\"),\r\n            kara: new Human(\"Kara Teristic\", 'female', \"the world is okay\"),\r\n            //new Human(\"Ma Bell\"),\r\n            essence: new Human(\"Essence Beauty\", 'female', \"i like talking to people\"),\r\n            velocity: new Human(\"Velocity Ideas\", 'female', \"shopping is fun\"),\r\n            time: new Human(\"Time Shine\", 'female', \"having a good time\"),\r\n            life: new Human(\"Life Cosmos\", 'female', \"i enjoy chilling out with my friends\"),\r\n            sweet: new Human(\"Sweet Good Omens\", 'female', \"it's all a game really\"),\r\n            x: new Human(\"Mr. X\", 'male', \"i'll keep my personal details to myself, thanks\"),\r\n\r\n        }\r\n        let { tom, albert, dale, abel, kara, essence, velocity, time, life, sweet, x } = pool;\r\n        tom.addFriend(albert)\r\n        tom.addFriend(dale)\r\n        tom.addFriend(sweet)\r\n        sweet.addFriend(x)\r\n        dale.addFriend(abel)\r\n        abel.addFriend(kara)\r\n        kara.addFriend(albert)\r\n        kara.addFriend(essence)\r\n        kara.addFriend(velocity)\r\n        kara.addFriend(time)\r\n        time.addFriend(life)\r\n        time.addFriend(velocity)\r\n        time.addFriend(essence)\r\n        time.addFriend(abel)\r\n\r\n\r\n        let n = 0;\r\n        await asyncForEach(Object.values(pool), async (human: Human) => {\r\n            this.db.put(human.id, human)\r\n            await human.findGoodPicture()\r\n            n++\r\n            let p = Math.floor(100 * ((n) / Object.entries(pool).length))\r\n            console.log(\"PROGRESS\", p)\r\n            progress(p)\r\n        })\r\n        for (let i=0; i<10; i++) {\r\n            Object.values(pool).forEach((human: Human) => {\r\n                human.activities.push(human.genEvent())\r\n            })\r\n        }\r\n        this.db.freeze()\r\n    }\r\n}\r\n\r\nconst svc = new HumanService();\r\nexport default svc;","import React from 'react';\r\n// import './UserBubble.scss';\r\nexport const UserBubble: React.FC<{ photoUrl: string }> = ({ photoUrl }) => <div\r\n    className='User-Bubble' style={{\r\n        background: `center / 150% url(${photoUrl})`,\r\n    }}\r\n/>\r\n","import React from 'react';\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport HumanService from \"../../services/HumanService\";\r\nimport Human from \"../../values/Human\";\r\n\r\ninterface Props { onChangeUser: Function, onVisitHome: Function, userName: string }\r\nconst Masquerade: React.FC<Props> = (props: Props) => <Dropdown\r\n    button\r\n    size='small'\r\n    className='icon'\r\n    floating\r\n    labeled\r\n    icon='user circle'\r\n    text={props.userName}\r\n    onChange={async (_e, { value }) => {\r\n        // @ts-ignore\r\n        let id: number = value\r\n        await props.onChangeUser(HumanService.lookup(id))\r\n        props.onVisitHome()\r\n    }}\r\n    search\r\n    header=\"Let the Masquerade begin!\"\r\n    style={{ width: '258px', color: '#000' }}\r\n    options={HumanService.all().map((human: Human) => {\r\n        return {\r\n            key: human.id,\r\n            text: human.name,\r\n            value: human.id,\r\n            image: { avatar: true, src: human.photoUrl }\r\n        }})}\r\n    />\r\n\r\n    export default Masquerade","import React from 'react';\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport './AppHeader.scss';\r\nimport { UserBubble } from '../atoms/UserBubble';\r\nimport Masquerade from '../atoms/Masquerade';\r\n\r\n\r\ninterface Props {\r\n    userName: string\r\n    userPhotoUrl: string\r\n    onChangeUser: Function\r\n    onVisitHome: Function\r\n    onVisitProfile: Function\r\n}\r\nconst AppHeader: React.FC<Props> = ({\r\n    userName,\r\n    userPhotoUrl,\r\n    onVisitHome,\r\n    onVisitProfile,\r\n    onChangeUser,\r\n}) => <Menu className='App-header'>\r\n        <Menu.Item header>Society</Menu.Item>\r\n        <Menu.Item name='Home' link onClick={(e) => onVisitHome()}></Menu.Item>\r\n        <Menu.Item name='Profile' link onClick={(e) => onVisitProfile()}></Menu.Item>\r\n        <Menu.Item>\r\n            <Masquerade\r\n                userName={userName}\r\n                onVisitHome={onVisitHome}\r\n                onChangeUser={onChangeUser}\r\n            />\r\n        </Menu.Item>\r\n        <Menu.Item position='right'>\r\n            <div\r\n                className='App-user'\r\n                onClick={(e) => onVisitHome()}\r\n                style={{\r\n                    cursor: 'pointer'\r\n                }}\r\n            >\r\n                <UserBubble photoUrl={userPhotoUrl} />\r\n                {userName}\r\n            </div>\r\n        </Menu.Item>\r\n    </Menu>\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\ninterface Props { photoUrl: string }\r\nexport default class HeroImage extends React.Component<Props>  {\r\n    render() {\r\n        let { photoUrl } = this.props;\r\n        return <Segment\r\n            className='Hero-header'\r\n            style={{\r\n                background: `center / 100% url(${photoUrl})`,\r\n                backgroundSize: 'cover'\r\n            }}\r\n        >\r\n            {this.props.children}\r\n        </Segment>;\r\n    }\r\n}","import React, { ReactNode } from \"react\";\r\nimport AppHeader from \"../compounds/AppHeader\";\r\nimport { Responsive, Segment, Header, Icon, SegmentGroup } from \"semantic-ui-react\";\r\nimport './PhotoTemplate.scss';\r\nimport HeroImage from \"../compounds/HeroImage\";\r\nimport faker from 'faker';\r\n\r\ninterface Props {\r\n    heroPhotoUrl: string\r\n    userPhotoUrl: string\r\n    userName?: string\r\n    aside?: ReactNode\r\n    heroContent?: ReactNode\r\n    doTemplateContent?: boolean\r\n    onChangeUser: Function\r\n    onVisitHome: Function\r\n    onVisitProfile: Function\r\n}\r\n\r\nclass PhotoTemplate extends React.Component<Props> {\r\n    render() {\r\n        let aside = this.props.aside\r\n        let hero = this.props.heroContent || this.props.doTemplateContent && <>\r\n            <Segment style={{ backgroundColor: 'rgba(255,255,255,0.8)' }}>\r\n                <Header icon>\r\n                    <Icon name='user' color='grey' />\r\n                    Odysseus\r\n                    <Header.Subheader>this could be you!</Header.Subheader>\r\n                </Header>\r\n            </Segment>\r\n        </>\r\n        let userName = this.props.userName || 'Odysseus'\r\n        return (<div className=\"Page\">\r\n            <AppHeader\r\n                userName={userName}\r\n                userPhotoUrl={this.props.userPhotoUrl}\r\n                onChangeUser={this.props.onChangeUser}\r\n                onVisitHome={this.props.onVisitHome}\r\n                onVisitProfile={this.props.onVisitProfile}\r\n            />\r\n            <main className='App-main'>\r\n                <Responsive minWidth={992}>\r\n                    <div className='Page-aside'>\r\n                        {aside}\r\n                    </div>\r\n                </Responsive>\r\n                <div className='Page-main'>\r\n                    <SegmentGroup className='Page-mainGroup'>\r\n                        {/* <Segment> */}\r\n                            <HeroImage photoUrl={this.props.heroPhotoUrl}>\r\n                                {hero}\r\n                            </HeroImage>\r\n                        {/* </Segment> */}\r\n                        {this.props.children || <Segment>Nothing here!</Segment>}\r\n                    </SegmentGroup>\r\n                </div>\r\n            </main>\r\n        </div>)\r\n    }\r\n}\r\nexport default PhotoTemplate;","import React from 'react';\r\nimport { SegmentGroup, Segment, Container, Header, Icon } from \"semantic-ui-react\";\r\nimport { UserBubble } from \"../atoms/UserBubble\";\r\nimport { Event } from \"../../values/Human\";\r\nimport './Activity.scss';\r\nimport HeroImage from './HeroImage';\r\nimport HumanService from '../../services/HumanService';\r\n\r\ninterface Props { activity: Event, humanId: number }\r\nconst Activity: React.FC<Props> = ({ activity, humanId }) => {\r\n    let human = HumanService.lookup(humanId);\r\n return (<SegmentGroup\r\n    key={activity.id}\r\n    className='Activity'\r\n>\r\n    <Segment color={human.favoriteColor} className='Activity-header'>\r\n        <Container className='Activity-author'>\r\n            {human.photoUrl && <UserBubble photoUrl={human.photoUrl} />}\r\n            <b>{human.name}</b> did something\r\n            {activity.createdAt &&\r\n            <span style={{color:'#d4d4d4',marginLeft: '5px'}}>at {activity.createdAt.toLocaleTimeString &&\r\n                activity.createdAt.toLocaleTimeString('en-US')}</span>\r\n            }\r\n        </Container>\r\n        <div className='Activity-actions'>\r\n            <span className='Activity-action'>\r\n                <span>0</span>\r\n                <Icon name='heart' color='red' />\r\n            </span>\r\n            <span className='Activity-action'>\r\n                <span>1</span>\r\n                <Icon name='favorite' color='yellow' />\r\n            </span>\r\n        </div>\r\n    </Segment>\r\n    <HeroImage\r\n        photoUrl={`https://source.unsplash.com/random/1080x720/?${activity.keywords.join('+')}`}\r\n    >\r\n        {/* // backgroundColor: '#eaeaea'\r\n                // background: `center / 100% url(https://source.unsplash.com/random/640x480/?${activity.keywords.join('+')})`,\r\n                // backgroundSize: 'cover',\r\n                // height: '280px',\r\n        // }}> */}\r\n        {/* <Container fluid style={{ width: '30%' }}> */}\r\n            <Segment style={{\r\n                backgroundColor: 'rgba(255,255,255,0.9)',\r\n                width: '100%'\r\n            }}>\r\n                <div className='Activity-body'>\r\n                    <Header icon>\r\n                        <Icon name={activity.icon} />\r\n                        {activity.name}\r\n                    </Header>\r\n                    <Container>\r\n                        {activity.description}\r\n                    </Container>\r\n                </div>\r\n            </Segment>\r\n        {/* </Container> */}\r\n    </HeroImage>\r\n\r\n    <Segment style={{ backgroundColor: '#f4f4f4' }}>\r\n        <Container fluid style={{ width: '30%' }}>\r\n            {activity.keywords.map(k => `#${k}`)}\r\n        </Container>\r\n    </Segment>\r\n</SegmentGroup>);\r\n}\r\n\r\nexport default Activity;","import React from 'react';\r\nimport Human from \"../../values/Human\";\r\nimport { Segment, Header, Icon, SegmentGroup, Container } from \"semantic-ui-react\";\r\nimport { UserBubble } from \"../atoms/UserBubble\";\r\nimport './UserTile.scss';\r\n\r\ninterface Props { human: Human, lookupHuman: Function, changeHuman: Function }\r\nconst UserTile: React.FC<Props> = ({ human, lookupHuman, changeHuman }) => <Container className='User-Tile' color={human.favoriteColor}>\r\n    {human.photoUrl && <UserBubble photoUrl={human.photoUrl} />}\r\n    {/* <div className='User-Bubble' style={{\r\n                    background: `center / 150% url(${human.photoUrl})`,\r\n                }} /> */}\r\n    <Header size='large'>\r\n        {human.name}\r\n        <Header.Subheader>\r\n            {human.about}\r\n        </Header.Subheader>\r\n    </Header>\r\n    <Header>Quote</Header>\r\n    <i>\"{human.quote}\"</i>\r\n    <Segment className='Friends'>\r\n        <Header size='tiny' icon>\r\n            <Icon name='group' />\r\n            Friends of {human.name}\r\n        </Header>\r\n        <SegmentGroup>\r\n            {human.friends.map((id: number) => {\r\n                let h = lookupHuman(id)\r\n                return <Segment\r\n                    className='Friends--list-item'\r\n                    compact\r\n                    color={h.favoriteColor}\r\n                    key={h.id}\r\n                    onClick={() => changeHuman(h)}\r\n                >\r\n                    <UserBubble photoUrl={h.photoUrl} />\r\n                    {h.name}\r\n                </Segment>\r\n            })}\r\n        </SegmentGroup>\r\n    </Segment>\r\n</Container>\r\nexport default UserTile;","import React from 'react';\r\nimport { Responsive, Segment, Header, Icon, Container, SegmentGroup, Input, Button, Divider } from \"semantic-ui-react\";\r\nimport Human from \"../../values/Human\";\r\nimport Activity from './Activity';\r\nimport UserTile from './UserTile';\r\nimport './ProfileBody.scss'\r\n\r\ninterface Props {\r\n    me?: boolean\r\n    human: Human\r\n    lookupHuman: (id: number) => Human\r\n    changeHuman: (h: Human) => void\r\n    createActivity: (h: Human, s: string) => void\r\n}\r\n\r\ninterface State {\r\n    input: string\r\n}\r\n\r\nclass ProfileBody extends React.Component<Props, State> {\r\n    state = { input: '' }\r\n    handleInputChange = (e: any) => { this.setState({ input: e.target.value })}\r\n    render() {\r\n        let { me, human, lookupHuman, changeHuman, createActivity } = this.props;\r\n        let activities = human.activities.slice().sort((a,b) =>\r\n            a.createdAt > b.createdAt ? -1 : 1\r\n        )\r\n\r\n        return (<div className='Profile-body'>\r\n            {/* <SegmentGroup horizontal> */}\r\n            <Responsive as={Segment} minWidth={968} color={human.favoriteColor} className='aside-wrapper'>\r\n            <div className='aside'>\r\n                <UserTile\r\n                    human={human}\r\n                    lookupHuman={lookupHuman}\r\n                    changeHuman={changeHuman}\r\n                />\r\n            </div>\r\n            </Responsive>\r\n            <Segment className='main'>\r\n                {me && <>\r\n                    <Header size='huge'>What are you up to?</Header>\r\n                    <Input\r\n                        size='massive'\r\n                        // icon='share'\r\n                        placeholder=\"What's going on?\"\r\n                        value={this.state.input}\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                    <Button\r\n                        primary type='submit' size='massive'\r\n                        onClick={()=>\r\n                            // alert(JSON.stringify(this.state.input))\r\n                            createActivity(human, this.state.input)\r\n                        }\r\n                    >\r\n                        <Icon name='share' />\r\n                        Share\r\n                    </Button>\r\n                    <br/><br/>\r\n                    <Divider />\r\n                </>}\r\n                {/* <Segment> */}\r\n                    <div className='Feed'>\r\n                    <Responsive as={Segment} maxWidth={968} color={human.favoriteColor} className='inline-header-wrapper'>\r\n                        <UserTile\r\n                            human={human}\r\n                            lookupHuman={lookupHuman}\r\n                            changeHuman={changeHuman}\r\n                        />\r\n                    </Responsive>\r\n\r\n                    <Header size='large'>\r\n                        {human.name}'s Recent Activity\r\n                        <Header.Subheader>\r\n                            {activities.length} events shown\r\n                        </Header.Subheader>\r\n                        </Header>\r\n\r\n                    <Container>\r\n                        {/* <ReactCSSTransitionGroup\r\n                            transitionName=\"example\"\r\n                            transitionEnterTimeout={500}\r\n                            transitionLeaveTimeout={300}> */}\r\n                            {activities.map(activity => <Activity\r\n                                key={activity.id}\r\n                                activity={activity}\r\n                                humanId={human.id}\r\n                            />)}\r\n                        {/* </ReactCSSTransitionGroup> */}\r\n                    </Container>\r\n                </div>\r\n                {/* </Segment > */}\r\n            </Segment>\r\n            {/* </SegmentGroup> */}\r\n        </div >);\r\n    }\r\n}\r\n\r\nexport default ProfileBody;\r\n","import React from \"react\";\r\nimport Human from \"../../values/Human\";\r\nimport { Header, Icon, Segment, SegmentGroup, Container } from 'semantic-ui-react';\r\nimport './ProfilePage.scss';\r\nimport PhotoTemplate from \"../templates/PhotoTemplate\";\r\nimport ProfileBody from \"../compounds/ProfileBody\";\r\nimport faker from 'faker';\r\nimport { UserBubble } from \"../atoms/UserBubble\";\r\n\r\ninterface Props {\r\n    human: Human\r\n    user: Human\r\n    changeUser: (u: Human) => void\r\n    changeHuman: (h: Human) => void\r\n    lookupHuman: (id: number) => Human\r\n    createActivity: (h: Human, d: string) => void\r\n    onVisitHome: Function\r\n    onVisitProfile: Function\r\n}\r\n\r\nexport default class ProfilePage extends React.Component<Props> {\r\n    render() {\r\n        let { human, user, changeHuman, lookupHuman, createActivity } = this.props;\r\n        let me = user === human;\r\n        return <PhotoTemplate\r\n            onChangeUser={this.props.changeUser}\r\n            onVisitHome={this.props.onVisitHome}\r\n            onVisitProfile={this.props.onVisitProfile}\r\n            userName={user.name}\r\n\r\n            userPhotoUrl={user.photoUrl || faker.image.people()}\r\n            heroPhotoUrl={human.photoUrl || faker.image.people()}\r\n            heroContent={\r\n                <SegmentGroup raised className='UserOverlay'>\r\n                    <Segment>\r\n                        <Header>\r\n                            {human.photoUrl && <UserBubble photoUrl={human.photoUrl} />}\r\n                            {human.name}\r\n                            {me && <Header.Subheader>this is you!</Header.Subheader>}\r\n                        </Header>\r\n                    </Segment>\r\n                    <Segment>{human.about}</Segment>\r\n                    <Segment>\r\n                        <div style={{\r\n                            fontSize: '62.5%',\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n\r\n                        }}>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='user' size='tiny' color='green' />\r\n                                    {human.friends.length} Friends\r\n                            </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='group' size='tiny' color='violet' />\r\n                                    {human.friends.length} Groups\r\n                            </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='heart' size='tiny' color='red' />\r\n                                    {human.friends.length} Hearts\r\n                                </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='star' size='tiny' color='yellow' />\r\n                                    {human.friends.length} Stars\r\n                                </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='plus' size='tiny' color='blue' />\r\n                                    {human.friends.length} Votes\r\n                                </Header>\r\n                            </div>\r\n                            <div className='totem'>\r\n                                <Header icon size='tiny'>\r\n                                    <Icon name='mail forward' size='tiny' color='olive' />\r\n                                    {human.friends.length} Links\r\n                                </Header>\r\n                            </div>\r\n                        </div>\r\n                    </Segment>\r\n                </SegmentGroup>\r\n            }\r\n        >\r\n            <ProfileBody\r\n                me={me}\r\n                human={human}\r\n                changeHuman={changeHuman}\r\n                lookupHuman={lookupHuman}\r\n                createActivity={(human: Human, desc: string )=>{\r\n                    console.log(\"CREATE IT\", { human, desc })\r\n                    createActivity(human, desc)\r\n                }}\r\n            />\r\n\r\n        </PhotoTemplate>\r\n    }\r\n}","import React from \"react\";\r\nimport AppHeader from \"../compounds/AppHeader\";\r\nimport { Responsive, SegmentGroup, Segment } from \"semantic-ui-react\";\r\nimport './ActivityFeedPage.scss';\r\nimport HumanService from \"../../services/HumanService\";\r\nimport Human, { Event } from '../../values/Human';\r\nimport Activity from \"../compounds/Activity\";\r\n\r\ninterface Props {\r\n    user: Human\r\n    userPhotoUrl: string\r\n    onChangeUser: Function\r\n    onVisitHome: Function\r\n    onVisitProfile: Function\r\n}\r\n\r\nexport default class ActivityFeedPage extends React.Component<Props> {\r\n    render() {\r\n        let items: Event[] = HumanService.all().\r\n            filter(human => this.props.user.friends.includes(human.id)).\r\n            flatMap(human => human.activities);\r\n\r\n        items = items.sort((a: Event, b: Event) => a.createdAt > b.createdAt ? -1 : 1)\r\n        return <div className=\"Page\">\r\n            <AppHeader\r\n                userName={'Nobody'}\r\n                userPhotoUrl={this.props.userPhotoUrl}\r\n                onChangeUser={this.props.onChangeUser}\r\n                onVisitHome={this.props.onVisitHome}\r\n                onVisitProfile={this.props.onVisitProfile}\r\n            />\r\n            <main className='App-main'>\r\n                <Responsive minWidth={992}>\r\n                    <div className='Page-aside'>\r\n                        <Segment>Nothing here either!</Segment>\r\n                        {/* {aside} */}\r\n                    </div>\r\n                </Responsive>\r\n                <div className='Page-main'>\r\n                    <SegmentGroup className='Page-mainGroup'>\r\n                        {items.map(it => it.creatorId && <Activity\r\n                            activity={it}\r\n                            humanId={it.creatorId}\r\n                        />)}\r\n                        {/* <Segment> */}\r\n                            {/* <HeroImage photoUrl={this.props.heroPhotoUrl}> */}\r\n                                {/* {hero} */}\r\n                            {/* </HeroImage> */}\r\n                        {/* </Segment> */}\r\n                        {/* {this.props.children || <Segment>Nothing here!</Segment>} */}\r\n                    </SegmentGroup>\r\n                </div>\r\n            </main>\r\n        </div> \r\n    }\r\n}","import Human, { LifeEvent } from \"../values/Human\";\r\nimport React from \"react\";\r\nimport HumanService from \"../services/HumanService\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\nimport { Container, Header, Segment, SegmentGroup, Progress } from \"semantic-ui-react\";\r\nimport PhotoTemplate from \"./templates/PhotoTemplate\";\r\nimport faker from 'faker';\r\nimport { Event } from '../values/Human'\r\n\r\nimport './Society.scss';\r\nimport HeroImage from \"./compounds/HeroImage\";\r\nimport ActivityFeedPage from \"./pages/ActivityFeedPage\";\r\n\r\ntype Page = 'Home' | 'Profile'\r\n\r\ninterface Props {\r\n  template?: boolean\r\n}\r\n\r\ninterface State {\r\n  constructed: boolean\r\n  progress: number\r\n  user?: Human\r\n  human?: Human\r\n  page: Page\r\n}\r\n\r\nexport default class Society extends React.Component<Props, State> {\r\n  state: State = {\r\n    constructed: false,\r\n    progress: 0,\r\n    user: undefined,\r\n    human: undefined,\r\n    page: 'Profile'\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"Mounted society...\")\r\n    await HumanService.seed((progress: number) => {\r\n      this.setState({ progress })\r\n    })\r\n    console.log(\"Done with seed!\")\r\n    this.setState({\r\n      user: HumanService.lookup(1),\r\n      constructed: true,\r\n      human: HumanService.lookup(1),\r\n    })\r\n  }\r\n\r\n  updateHuman = async (human: Human) => {\r\n    await this.setState({ human })\r\n  }\r\n\r\n  updateUser = async (user: Human) => {\r\n    await this.setState({ user })\r\n  }\r\n\r\n  visitProfile = () => {\r\n    let { user } = this.state\r\n    if (user) {\r\n      console.log(\"VISIT HOME\", { user, name: user.name })\r\n      this.updateHuman(user)\r\n      this.setState({ page: 'Profile' })\r\n    }\r\n  }\r\n\r\n  visitHome = () => {\r\n      this.setState({ page: 'Home' })\r\n  }\r\n\r\n  createActivity: (h: Human, d: string) => void = (human, description) => {\r\n    let e: Event = new LifeEvent(human.id, \"a thing happened\", description, 'favorite', ['fun'])\r\n    human.activities.push(e)\r\n    // console.log(\"new activites\", human.activities)\r\n    this.setState({ human })\r\n  };\r\n\r\n  renderProfileTemplate() {\r\n    return <PhotoTemplate\r\n        onChangeUser={this.updateUser}\r\n        onVisitHome={() => {}}\r\n        onVisitProfile={() => {}}\r\n        userPhotoUrl={faker.image.people()}\r\n        heroPhotoUrl={faker.image.people()}\r\n        doTemplateContent\r\n      />;\r\n  }\r\n\r\n  renderPage = () => {\r\n    if (!this.state.user || !this.state.human) {\r\n      return <p>no user or human?</p>\r\n    }\r\n    switch(this.state.page) {\r\n      case 'Home': return this.state.user.photoUrl && <ActivityFeedPage\r\n        user={this.state.user}\r\n        userPhotoUrl={this.state.user.photoUrl}\r\n        onVisitHome={this.visitHome}\r\n        onVisitProfile={this.visitProfile}\r\n        onChangeUser={this.updateUser}\r\n      />\r\n      case 'Profile': return this.props.template ? this.renderProfileTemplate() : <ProfilePage\r\n        human={this.state.human}\r\n        user={this.state.user}\r\n        onVisitHome={this.visitHome}\r\n        onVisitProfile={this.visitProfile}\r\n        changeHuman={this.updateHuman}\r\n        changeUser={this.updateUser}\r\n        lookupHuman={HumanService.lookup}\r\n        createActivity={this.createActivity}\r\n      />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { constructed, human, user } = this.state;\r\n    if (constructed) { //} && human !== undefined && user !== undefined) {\r\n      return this.renderPage();\r\n      // return this.props.template ? this.renderProfileTemplate() : <ProfilePage\r\n      //   human={human}\r\n      //   user={user}\r\n      //   onVisitHome={this.visitProfile}\r\n      //   changeHuman={this.updateHuman}\r\n      //   changeUser={this.updateUser}\r\n      //   lookupHuman={HumanService.lookup}\r\n      // />\r\n    } else {\r\n      return <div className='Construction'>\r\n        <Container>\r\n          <SegmentGroup>\r\n            <HeroImage photoUrl={\"https://source.unsplash.com/random\"}  />\r\n            <Segment>\r\n              <Header>Constructing the World...</Header>\r\n              Please wait just a moment, building some interesting people\r\n              (Please note: we'll only do this once!)\r\n          </Segment>\r\n          <Segment>\r\n            <Progress value={this.state.progress} total={100} />\r\n          </Segment>\r\n          </SegmentGroup>\r\n        </Container>\r\n      </div>\r\n    }\r\n  }\r\n}","import React from 'react';\nimport Society from './components/Society';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Society />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}